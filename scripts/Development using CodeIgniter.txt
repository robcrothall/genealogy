Development process using CodeIgniter
-------------------------------------
Create a new repository on GitHub.  Do NOT add any files e.g. readme, .gitignore, etc.
Create a project directory on the desktop e.g.:
cd ~/projects
mkdir genealogy
cd genealogy

Now initialise the project directory:
git init 

Download from https://codeigniter.com into Downloads directory.
Unzip the package and copy everything to the project directory.
Optional:  Delete the user_manual directory.
git status
git add .
git commit -m "Initial commit"
git status
git remote add origin https://github.com/robcrothall/genealogy.git
git push -u origin master

Create the site
---------------
SELinux may object to writing to the logs directory.  Open a command prompt as root and execute the following:
------------------------------------------------
setsebool –P httpd_execmem 1
setsebool –P httpd_unified 1
------------------------------------------------

Start to edit the code in the project directory
-----------------------------------------------
Do ALL coding in the project directory, and copy over to the actual 
website directory.  If you code in the target directory, the new code 
will be overwritten by the old when you next deploy.

Create application/controllers/Pages.php
----------------------------------------
This will handle all static pages.  The pages themselves will all be
in application/views/pages.

<?php
class Pages extends CI_Controller {

        public function view($page = 'home')
    {
        if ( ! file_exists(APPPATH.'views/pages/'.$page.'.php'))
        {
                // Whoops, we don't have a page for that!
                show_404();
        }
        $data['title'] = ucfirst($page); // Capitalize the first letter
        $this->load->view('templates/header', $data);
        $this->load->view('pages/'.$page, $data);
        $this->load->view('templates/footer', $data);
     }
}

Create the header at application/views/templates/header.php
-----------------------------------------------------------
<html>
        <head>
                <title>Kowie Museum</title>
        </head>
        <body>
                <h1><?php echo $title; ?></h1>

The header.php file will eventually contain the application menu.

Create a footer at application/views/templates/footer.php
---------------------------------------------------------
                <em>&copy; 2018</em> by Rob Crothall and Associates
        </body>
</html>

Create skeleton home.php and about.php in application/views/pages/ directory.

Update the application/config/routes.php:
$route['news/create'] = 'news/create';
$route['news/(:any)'] = 'news/view/$1';
$route['news'] = 'news';
$route['(:any)'] = 'pages/view/$1';
$route['default_controller'] = 'pages/view';

Test by going to [your-site-url]index.php/pages/view/home and [your-site-url]index.php/pages/view/about – if they display correctly, then it is working.

Models
------
Create a new database e.g. genealogy.  Use phpMyAdmin or equivalent.
Use utf8 character set and utf8_general_ci collation.

Configure the database connections, etc. by creating the following file in application/config/database.php.
$db['default'] = array(
        'dsn'   => '',
        'hostname' => 'localhost',
        'username' => 'gen',
        'password' => 'Wh2ciKHM#$%',
        'database' => 'genealogy',
        'dbdriver' => 'mysqli',
        'dbprefix' => '',
        'pconnect' => TRUE,
        'db_debug' => TRUE,
        'cache_on' => FALSE,
        'cachedir' => '',
        'char_set' => 'utf8',
        'dbcollat' => 'utf8_general_ci',
        'swap_pre' => '',
        'encrypt' => FALSE,
        'compress' => FALSE,
        'stricton' => FALSE,
        'failover' => array()
);

Open up the application/models/ directory and create a new model file called ???_model.php 
------------------------------------------------------------------------------------------
<?php
class News_model extends CI_Model {
        public function __construct()
        {
                $this->load->database();
        }
	public function get_news($slug = FALSE)
	{
		if ($slug === FALSE)
			{
                	$query = $this->db->get('news');
                	return $query->result_array();
			}

		$query = $this->db->get_where('news', array('slug' => $slug));
		return $query->row_array();
	}
}


Create the "news" table in the database using PHPMyAdmin or equivalent.
CREATE TABLE news (
        id int(11) NOT NULL AUTO_INCREMENT,
        title varchar(128) NOT NULL,
        slug varchar(128) NOT NULL,
        text text NOT NULL,
        PRIMARY KEY (id),
        KEY slug (slug)
);

Create a new controller in application/controllers/News.php
<?php
class News extends CI_Controller {
        public function __construct()
        {
                parent::__construct();
                $this->load->model('news_model');
                $this->load->helper('url_helper');
        }
        public function index()
        {
                $data['news'] = $this->news_model->get_news();
        	$data['title'] = 'News archive';

	        $this->load->view('templates/header', $data);
        	$this->load->view('news/index', $data);
        	$this->load->view('templates/footer');
        }
        public function view($slug = NULL)
        {
                $data['news_item'] = $this->news_model->get_news($slug);
	        if (empty($data['news_item']))
        	{
                	show_404();
        	}

	        $data['title'] = $data['news_item']['title'];

	        $this->load->view('templates/header', $data);
        	$this->load->view('news/view', $data);
        	$this->load->view('templates/footer');
        }
}

We now have the data stored in the $data array, but we need to display it.
Create application/views/news/index.php and add the next piece of code.

<h2><?php echo $title; ?></h2>

<?php foreach ($news as $news_item): ?>

        <h3><?php echo $news_item['title']; ?></h3>
        <div class="main">
                <?php echo $news_item['text']; ?>
        </div>
        <p><a href="<?php echo site_url('news/'.$news_item['slug']); ?>">View article</a></p>

<?php endforeach; ?>

Now create the page to view the news item - application/views/news/view.php. 
<?php
echo '<h2>'.$news_item['title'].'</h2>';
echo $news_item['text'];

Now we create a data capture form that allows us to update the database:
Create the new view at application/views/news/create.php.
<h2><?php echo $title; ?></h2>

<?php echo validation_errors(); ?>

<?php echo form_open('news/create'); ?>

    <label for="title">Title</label>
    <input type="input" name="title" /><br />

    <label for="text">Text</label>
    <textarea name="text"></textarea><br />

    <input type="submit" name="submit" value="Create news item" />

</form>

Go back to the application/controllers/News.php and add the following function:
public function create()
{
    $this->load->helper('form');
    $this->load->library('form_validation');

    $data['title'] = 'Create a news item';

    $this->form_validation->set_rules('title', 'Title', 'required');
    $this->form_validation->set_rules('text', 'Text', 'required');

    if ($this->form_validation->run() === FALSE)
    {
        $this->load->view('templates/header', $data);
        $this->load->view('news/create');
        $this->load->view('templates/footer');

    }
    else
    {
        $this->news_model->set_news();
        $this->load->view('news/success');
    }
}

Create a view at application/views/news/success.php and write a success message.

Now change the model to provide update functionality.  Add this function:
public function set_news()
{
    $this->load->helper('url');

    $slug = url_title($this->input->post('title'), 'dash', TRUE);

    $data = array(
        'title' => $this->input->post('title'),
        'slug' => $slug,
        'text' => $this->input->post('text')
    );

    return $this->db->insert('news', $data);
}

Commit the changes to your development library and deploy all changed code to the website.
Point the browser to your site URL/index.php/news/create and test.


